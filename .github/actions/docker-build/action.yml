name: Build Docker image

inputs:
  version:
    required: true
    type: string
  latest:
    required: false
    type: boolean
    default: false
  github-token:
    required: true
    type: string
  docker-image-name:
    required: true
    type: string
  wiz-client-id:
    required: true
    type: string
  wiz-client-secret:
    required: true
    type: string
  wiz-project-id:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Log in to registry
      run: echo "${{ inputs.github-token }}" | docker login ghcr.io -u $ --password-stdin
      shell: bash

    - name: Download Wiz CLI
      run: |
        curl -Lo wizcli https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64

        # Import the public key
        curl -Lo public_key.asc https://downloads.wiz.io/wizcli/public_key.asc
        gpg --import public_key.asc
        # (OR) Ubuntu's Keyserver
        # gpg --keyserver keyserver.ubuntu.com --recv-keys CE4AE4BAD12EE02C

        # Download files to perform signature verification
        curl -Lo /tmp/wizcli-sha256 https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64-sha256
        curl -Lo /tmp/wizcli-sha256.sig https://downloads.wiz.io/wizcli/latest/wizcli-linux-amd64-sha256.sig

        # Verify signature
        gpg --verify /tmp/wizcli-sha256.sig /tmp/wizcli-sha256

        # Verify SHA256
        echo "$(cat /tmp/wizcli-sha256) wizcli" | sha256sum --check
        chmod +x wizcli
        ./wizcli version
      shell: bash

    - name: Authenticate Wiz API
      run: ./wizcli auth --id ${{ inputs.wiz-client-id }} --secret ${{ inputs.wiz-client-secret }}
      shell: bash

    - name: Set up Docker image name
      id: docker-image-name
      run: |
        IMAGE_NAME=$(echo "ghcr.io/${{ github.repository_owner }}/${{ inputs.docker-image-name }}" | tr '[A-Z]' '[a-z]')
        echo $IMAGE_NAME
        echo "IMAGE_NAME=$IMAGE_NAME" >> "$GITHUB_ENV"
      shell: bash

    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        ignore: DL3045,DL3007

    - name: Scan DockerFile
      run: ./wizcli iac scan --name ${{ env.IMAGE_NAME }} --path . --types Dockerfile --project ${{ inputs.wiz-project-id }}
      shell: bash

    - name: Build and push image
      run: |
        docker build --tag ${{ env.IMAGE_NAME }}:${{ inputs.version }} --build-arg "BUILD_VERSION=${{ inputs.version }}" --platform linux/amd64 --no-cache .
        docker push ${{ env.IMAGE_NAME }}:${{ inputs.version }}
      shell: bash

    - name: Tag latest
      if: ${{ inputs.latest == 'true' }}
      run: |
        docker tag ${{ env.IMAGE_NAME }}:${{ inputs.version }} ${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.IMAGE_NAME }}:latest
      shell: bash

    - name: Wiz Docker scan
      run: |
        ./wizcli docker scan --image ${{ env.IMAGE_NAME }}:${{ inputs.version }} --dockerfile Dockerfile --project ${{ inputs.wiz-project-id }}
        ./wizcli docker tag --image ${{ env.IMAGE_NAME }}:${{ inputs.version }}
      shell: bash
